// ######################################################################
// 
// 《Neo4j图数据库扩展指南》
// 
// 代码示例 - 第7章
// 
// 作者：俞方桦，https://www.linkedin.com/in/joshuayu/
// 最后修改日期：2019-12-29
//
// ###################################################################### 

// #########################################################################
// 
// 7.2节



// 7.2(1) 创建触发器：在人物节点更新surname属性后，
//        为其所有孩子节点更新相同的surname属性。

CALL apoc.trigger.add(
   'setSurnameForChildren',
   'UNWIND apoc.trigger.propertiesByKey({assignedNodeProperties},"surname") as prop WITH prop.node as n MATCH(n)-[:父子*]->(a) SET a.surname = n.surname', 
   {phase:'after'}
);


// 7.2(2) 测试触发器：为曹操节点增加surname属性。
//        运行结果：所有从曹操出发、沿着“父子”关系可以到达的节点都
//                  自动被添加surname属性。

MATCH (n:人物{姓名:'曹操'}) 
SET n.surname = '曹'


// 7.2(3) 创建触发器：在创建文臣节点后自动增加“人物”标签。
//        

CALL apoc.trigger.add(
   'assignedLabels',
   "UNWIND apoc.trigger.nodesByLabel({assignedLabels},'文臣') AS node SET node:人物", 
   {phase:'after'}
)


// 7.2(4) 测试触发器：创建“庞统”节点、并赋予“文臣”标签。
//        运行结果：“庞统”会自动拥有“人物”标签。

CREATE (n:文臣{姓名:'庞统'})


// #########################################################################
// 
// 7.4节


// 7.4(1) 显示数据库中的元图模型。

CALL apoc.meta.graph

// 7.4(2) 显示数据库中的统计信息。

CALL apoc.meta.data


// #########################################################################
// 
// 7.5节

// 7.5(1) 显示数据库中每类对象内部ID的分配情况。

CALL apoc.monitor.ids


// 7.5(2) 显示数据库中已完成和正在运行的事务。

CALL apoc.monitor.tx







